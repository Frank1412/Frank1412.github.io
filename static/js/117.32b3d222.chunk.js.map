{"version":3,"file":"static/js/117.32b3d222.chunk.js","mappings":"qNAIMA,EAAe,SAACC,GAIpB,MADW,mEACDC,KAAKD,IAAyB,IAAhBA,EAAKE,MAC/B,EAEMC,EAAW,CACf,KACA,QACA,OACA,iDACA,sCACA,YACA,UACA,oBACA,kDACA,iBACA,qBACA,OACA,QACA,gCACA,UAqBIC,EAAY,SAAHC,GAAiBA,EAAXC,YAAmB,IAItCC,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAGF,EAAA,GACVG,GADsBH,EAAA,IACWD,EAAAA,EAAAA,UAASL,EAASQ,KAAKE,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjDE,EAAOD,EAAA,GACdE,GAD6BF,EAAA,IACFL,EAAAA,EAAAA,UAAS,IAAEQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GACtCE,GADWD,EAAA,GAAYA,EAAA,IACSR,EAAAA,EAAAA,WAAS,IAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7BE,GAAFD,EAAA,GAAaA,EAAA,IAuB5B,OACEE,EAAAA,EAAAA,KAAA,OACEC,UAAU,mBACVC,MAAOvB,EAAae,GAAW,CAAC,EAAI,CAAES,MAAO,OAC7CC,aAAc,kBAAML,GAAY,EAAM,EACtCM,aAAc,kBAAOd,EAAMR,EAASD,QAAWiB,GAAY,EAAK,EAACO,UAEjEN,EAAAA,EAAAA,KAAA,KAAGO,KAAM5B,EAAae,GAAQ,UAAAc,OAAad,EAAO,kBAAmB,GAAGY,UAEtEN,EAAAA,EAAAA,KAAA,QAAAM,SAAM,+BAId,EAEAtB,EAAUyB,aAAe,CACvBvB,aAAa,GAOf,Q,UCzEA,EApBgB,WAAH,OACXc,EAAAA,EAAAA,KAACU,EAAAA,EAAI,CACHC,MAAM,UACNC,YAAY,2DAA0DN,UAEtEO,EAAAA,EAAAA,MAAA,WAASZ,UAAU,OAAOa,GAAG,UAASR,SAAA,EACpCN,EAAAA,EAAAA,KAAA,UAAAM,UACEN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOK,UACpBN,EAAAA,EAAAA,KAAA,MAAAM,UAAIN,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,WAAUV,SAAC,mBAG5BO,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,WAAUK,SAAA,EACvBN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,sDACHN,EAAAA,EAAAA,KAAChB,EAAS,QAEZgB,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,QAEV,C","sources":["components/Contact/EmailLink.js","pages/Contact.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'hi',\n  'hello',\n  'hola',\n  'you-can-email-me-at-literally-anything! Really',\n  'well, not anything. But most things',\n  'like-this',\n  'or-this',\n  'but not this :(  ',\n  'you.can.also.email.me.with.specific.topics.like',\n  'just-saying-hi',\n  'please-work-for-us',\n  'help',\n  'admin',\n  'or-I-really-like-your-website',\n  'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = ({ loopMessage }) => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  // useInterval(() => {\n  //   let newIdx = idx;\n  //   let newChar = char;\n  //   if (char - hold >= messages[idx].length) {\n  //     newIdx += 1;\n  //     newChar = 0;\n  //   }\n  //   if (newIdx === messages.length) {\n  //     if (loopMessage) {\n  //       updateIter(0);\n  //       updateChar(0);\n  //     } else {\n  //       setIsActive(false);\n  //     }\n  //   } else {\n  //     updateMessage(messages[newIdx].slice(0, newChar));\n  //     updateIter(newIdx);\n  //     updateChar(newChar + 1);\n  //   }\n  // }, isActive ? delay : null);\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: 'red' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <a href={validateText(message) ? `mailto:${message}@mldangelo.com` : ''}>\n        {/* <span>{message}</span> */}\n        <span>frank.kid1412@gmail.com</span>\n      </a>\n    </div>\n  );\n};\n\nEmailLink.defaultProps = {\n  loopMessage: false,\n};\n\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool,\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport EmailLink from '../components/Contact/EmailLink';\nimport ContactIcons from '../components/Contact/ContactIcons';\n\nconst Contact = () => (\n  <Main\n    title=\"Contact\"\n    description=\"Contact Shouzhi Fang via email @ frank.kid1412@gmail.com\"\n  >\n    <article className=\"post\" id=\"contact\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/contact\">Contact</Link></h2>\n        </div>\n      </header>\n      <div className=\"email-at\">\n        <p>Feel free to get in touch. You can email me at: </p>\n        <EmailLink />\n      </div>\n      <ContactIcons />\n    </article>\n  </Main>\n);\n\nexport default Contact;\n"],"names":["validateText","text","test","length","messages","EmailLink","_ref","loopMessage","_useState","useState","_useState2","_slicedToArray","idx","_useState3","_useState4","message","_useState5","_useState6","_useState7","_useState8","setIsActive","_jsx","className","style","color","onMouseEnter","onMouseLeave","children","href","concat","defaultProps","Main","title","description","_jsxs","id","Link","to","ContactIcons"],"sourceRoot":""}